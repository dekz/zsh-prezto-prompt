pmodload 'helper'

function prompt_dekz_pwd {
#  local pwd="${PWD/#$HOME/~}"
#
#  if [[ "$pwd" == (#m)[/~] ]]; then
#    _prompt_dekz_pwd="$MATCH"
#    unset MATCH
#  else
#    _prompt_dekz_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
#  fi
  _prompt_dekz_pwd="%B%c%b"
}

function prompt_dekz_bg {
  if [[ $(jobs -l | wc -l) -gt 0 ]]; then
    _prompt_dekz_bg="[%(1j.%j.)] "
  else
    _prompt_dekz_bg=""
  fi
}

function prompt_dekz_precmd {
  unsetopt XTRACE KSH_ARRAYS

  prompt_dekz_bg
  prompt_dekz_pwd
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi
}

# For some reason this sorin default prompt 
# can continue to influence Rprompt, perhaps from a zsh hook
function prompt_sorin_precmd { }

function prompt_dekz_setup {
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(percent subst)

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_dekz_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ' %B%(?:%F{green}λ%f:%F{red}λ%f)%f%b '
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{green}❮%F{yellow}❮%F{red}❮%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:branch' format '%F{blue}%b%f'
  zstyle ':prezto:module:git:info:dirty' format '%%B%F{red}*%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' ' %D' \
    'rprompt' '%b'

  # Define prompts.
  PROMPT='${_prompt_dekz_bg}${SSH_TTY:+"%F{red}%n%f@%F{yellow}%m%f "}${_prompt_dekz_pwd}%f${git_info:+${(e)git_info[prompt]}}%(!. %B%F{red}#%f%b.)${editor_info[keymap]} '

  RPROMPT='${editor_info[overwrite]}${VIM:+" %B%F{green}V%f%b"}${INSIDE_EMACS:+" %B%F{green}E%f%b"}${git_info[rprompt]}'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_dekz_setup "$@"
